{
  "author": "",
  "dependencies": {
    "@nhost/nhost-js": "^3.2.5",
    "@otiuming/biz-builder": "workspace:*",
    "@otiuming/domain-bookings": "workspace:*",
    "@otiuming/domain-omnidata-types": "workspace:*",
    "@otiuming/domain-rates": "workspace:*",
    "@otiuming/email-templates": "workspace:*",
    "@otiuming/utils-common": "workspace:*",
    "@otiuming/utils-logging": "workspace:*",
    "@sentry/node": "^9.5.0",
    "@swan-io/boxed": "^3.2.0",
    "cross-fetch": "^4.1.0",
    "graphql": "^16.10.0",
    "graphql-request": "^6.1.0",
    "graphql-tag": "^2.12.6",
    "lodash-es": "^4.17.0",
    "node-mailjet": "^6.0.8",
    "pino": "^9.6.0"
  },
  "description": "",
  "devDependencies": {
    "@graphql-codegen/cli": "^5.0.0",
    "@graphql-codegen/typescript": "^4.0.1",
    "@graphql-codegen/typescript-graphql-request": "^6.0.1",
    "@graphql-codegen/typescript-operations": "^4.0.1",
    "@otiuming/base": "workspace:*",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@rollup/plugin-node-resolve": "^16.0.0",
    "@rollup/plugin-typescript": "^12.1.2",
    "@types/express": "^5.0.0",
    "@types/lodash-es": "^4.17.12",
    "rollup": "^4.35.0",
    "rollup-plugin-generate-package-json": "^3.2.0",
    "typescript": "^5.8.2"
  },
  "homepage": "https://github.com/otiuming-admin/omnidata#readme",
  "license": "ISC",
  "main": "index.js",
  "name": "omnidata",
  "scripts": {
    "link-nhost": "mkdir -p dist && cd dist && rm -rf nhost && ln -s ../nhost nhost",
    "build": "pnpm link-nhost  && pnpm generate-dot-files && pnpm clean-functions && pnpm build-functions  && pnpm build-packagelockjson && pnpm build-nhost-config && pnpm build-folders",
    "build-packagelockjson": "cd dist/functions && npm install --package-lock-only",
    "build-nhost-config": " mkdir -p dist/.nhost && cp -r nhost-config-template/data dist/.nhost/data && cp -r nhost-config-template/traefik dist/.nhost/traefik",
    "build-functions": "rollup -c --bundleConfigAsCjs",
    "build-folders": "mkdir -p dist/.nhost/data && cd dist/.nhost/data && mkdir -p mailhog && mkdir -p minio && mkdir -p console-config",
    "clean": "pnpm clean-nhost && pnpm clean-js && pnpm clean-functions && pnpm clean-data && pnpm clean-others",
    "clean-nhost": "rm -rf dist/.nhost && rm -rf dist/nhost",
    "clean-js": "rm -rf dist/*.js",
    "clean-functions": "rm -rf dist/functions",
    "clean-data": "docker compose --file docker-compose.yaml --file docker-compose.overrides.yaml --project-name ${NHOST_PROJECT_NAME} down --volumes",
    "clean-others": "rm -rf dist",
    "dev": "pnpm build && pnpm serve",
    "serve": "cp .secrets dist && docker compose --file docker-compose.yaml --file docker-compose.overrides.yaml --project-name ${NHOST_PROJECT_NAME} up --detach",
    "stop": "docker compose --file docker-compose.yaml --file docker-compose.overrides.yaml --project-name ${NHOST_PROJECT_NAME} down",
    "generate-functions-graphql": "graphql-codegen --config graphql-codegen-config.yaml --verbose --debug",
    "test": "jest --coverage --passWithNoTests",
    "merge-workspace-deps": "merge-workspace-deps",
    "postinstall": "merge-workspace-deps",
    "update-schema": "graphql-codegen --config graphql-codegen.yaml",
    "generate-dot-files": "pnpm generate-env && pnpm generate-secrets",
    "generate-env": "rm -f .env && generate-env",
    "generate-secrets": "rm -f .secrets && generate-env .secrets"
  },
  "version": "1.0.0"
}
