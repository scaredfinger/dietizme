name: Publish Omnidata

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      
      - name: Check if STAGING_DEPLOY_ACCESS_TOKEN is set
        run: |
          if [ -z "${{ secrets.STAGING_DEPLOY_ACCESS_TOKEN }}" ]; then
            echo "Secret is not set or empty"
            exit 1  # Fails the step, causing the workflow to stop.
          else
            echo "Secret is set"
          fi
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      
      - name: Install pnpm
        id: install-pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-store-path
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        id: setup-pnpm-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        run: pnpm install

      - name: Build Omnidata
        run: pnpm nx build omnidata

      - name: Copy files to dist
        run: |
          cp -R apps/omnidata/nhost apps/omnidata/dist

      - name: Generate new package.json
        run: |
          jq '{dependencies: .peerDependencies}' apps/omnidata/package.json > apps/omnidata/dist/package.json

      - name: Generate lock file
        run: |
          cd apps/omnidata/dist
          npm install --package-lock-only
      
      - name: Commit and push to another repository
        run: |
          cd apps/omnidata/dist
          git init
          git branch -m main
          git config user.name "CICD Otiuming"
          git config user.email "cicd@otiuming.com"
          git add .
          git commit -m "Deploying Omnidata"
          git push --force "https://${{ secrets.STAGING_DEPLOY_ACCESS_TOKEN }}@github.com/otiuming-test/omnidata-deploy.git" main
          git push --force "https://${{ secrets.PROD_DEPLOY_ACCESS_TOKEN }}@github.com/otiuming-admin/omnidata-deploy.git" main
          # dummy 2
